@mixin hover-sm {
	filter: drop-shadow(
		($base-size / 4) ($base-size / 2) ($base-size / 2) var(--color-aside)
	);
	filter: drop-shadow(
		($base-size / 2) $base-size $base-size var(--color-aside)
	);
	filter: drop-shadow(
		$base-size ($base-size * 2) ($base-size * 2) var(--color-aside)
	);
}

@mixin hover-md {
	filter: drop-shadow(
		($base-size / 2) $base-size $base-size var(--color-aside)
	);
	filter: drop-shadow(
		$base-size ($base-size * 2) ($base-size * 2) var(--color-aside)
	);
	filter: drop-shadow(
		($base-size * 2) ($base-size * 4) ($base-size * 4) var(--color-aside)
	);
}

@mixin hover-lg {
	filter: drop-shadow(
		$base-size ($base-size * 2) ($base-size * 2) var(--color-aside)
	);
	filter: drop-shadow(
		$base-size ($base-size * 2) ($base-size * 2) var(--color-aside)
	);
	filter: drop-shadow(
		($base-size * 3) ($base-size * 6) ($base-size * 6) var(--color-aside)
	);
}

// the whole page
.container {
	display: grid;
	grid-template-columns: [leftedge] 0 [leftmidbar] 0 [leftbar] 1fr [rightmidbar] 0 [rightbar] 0 [rightedge];
	grid-template-rows: [topedge] 100px [topbar] 1fr [bottombar] 50px [bottomedge];

	// the center, absent the sidebars and header/footer
	.container-center {
		grid-column-start: leftmidbar;
		grid-column-end: rightmidbar;
		grid-row-start: topbar;
		grid-row-end: bottombar;

		justify-self: center;
	}

	// both the center and left sidebar
	.container-left-center {
		grid-column-start: leftedge;
		grid-column-end: rightmidbar;
		grid-row-start: topbar;
		grid-row-end: bottombar;

		justify-self: center;
	}

	.container-full {
		grid-column-start: leftedge;
		grid-column-end: rightbar;
		grid-row-start: topbar;
		grid-row-end: bottombar;

		justify-self: center;
		width: 90%;
	}

	// the top-center
	.container-header {
		grid-column-start: leftmidbar;
		grid-column-end: rightmidbar;
		grid-row-start: topedge;
		grid-row-end: topbar;

		margin: auto;
	}

	// the bottom-center
	.container-footer {
		grid-column-start: leftmidbar;
		grid-column-end: rightmidbar;
		grid-row-start: bottombar;
		grid-row-end: bottomedge;

		margin: auto;
	}
}

@media screen and (min-width: $phone-width) {
	.container {
		grid-template-columns: [leftedge] 10% [leftbar] 10% [leftmidbar] 1fr [rightmidbar] 10% [rightbar] 10% [rightedge];
		grid-template-rows: [topedge] 0 [topbar] 1fr [bottombar] 40px [bottomedge];

		.container-header {
			grid-column-start: rightbar;
			grid-column-end: rightedge;
			grid-row-start: topbar;
			grid-row-end: bottombar;

			margin: unset;
		}
	}
}

body {
	box-sizing: border-box;
	background-color: var(--color-background);
}

header {
	margin-top: $base-size * 5;
}

section {
	max-width: $base-size * 200;
	width: $screen-width-sm;

	> h1:first-of-type {
		font-size: $font-xl;
		text-align: center;
	}
}

article {
	> h1:first-of-type {
		font-size: $font-xl;
		text-align: center;
	}
}

pre {
	> code {
		display: block;
		border: $base-size solid var(--color-stroke);
		border-radius: $rounded-sm;
		overflow-x: auto;
		padding: 5px;
	}
}

blockquote {
	background-color: var(--color-background);
	border: $base-size solid var(--color-stroke);
	border-radius: $rounded-sm;
	padding: $base-size * 2;
	p {
		display: inline;
	}
}

hr {
	border: 0;
	border-bottom: thin solid var(--color-stroke);
	margin: ($base-size * 5) 0;
	clear: both;
}

input[type="submit"] {
	color: var(--color-background);
	background-color: var(--color-link);
	border-color: var(--color-stroke);
	border-radius: $rounded-sm;
	padding: $base-size;
	@include hover-sm();
}

button {
	color: var(--color-background);
	background-color: var(--color-link);
	border-color: var(--color-stroke);
	border-radius: $rounded-sm;
	@include hover-sm();
}

select {
	color: var(--color-background);
	background-color: var(--color-link);
	border-color: var(--color-stroke);
	border-radius: $rounded-sm;
	@include hover-sm();
}

img {
	display: block;
	width: 100%;
	height: auto;
	margin: ($base-size * 5) 0;
	border-radius: $rounded-sm;
	@include hover-md();
}

video {
	display: block;
	margin: auto;
	border: 1px solid var(--color-stroke);
}

figcaption {
	margin-top: -($base-size * 3);
	padding-left: $base-size * 3;
}

@media screen and (min-width: $phone-width) {
	body {
		padding: 0;
	}

	section {
		max-width: $base-size * 425;
		width: $screen-width-lg;
	}

	// matches article width for narrow pages
	section.narrow {
		max-width: ($base-size * 425) / $column-count;
		min-width: ($base-size * 200) / $column-count;
	}

	article {
		max-width: ($base-size * 425) / $column-count;
		// matches phone size. smaller turns to single-column
		min-width: ($base-size * 200) / $column-count;
		width: $screen-width-lg;
	}
}
